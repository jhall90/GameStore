@inject GamesClient GamesClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="modal fade" id="@GetModalId(Game)" tabindex="-1" aria-labelledby="deleteGameModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-header">
            <h1 class="modal-title fs-5" id="deleteGameModalLabel">@title</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="@Confirm">Delete Game</button>
        </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public GameSummary? Game { get; set; }

    private string title = string.Empty;

    protected override void OnParametersSet()
    {
        title = $"Delete {Game?.Name}?";
    }

    public static string GetModalId(GameSummary? game)
    {
        ArgumentNullException.ThrowIfNull(game);
        return $"deleteModal-{game.Id}";
    }

    private void Confirm()
    {
        GamesClient.DeleteGame(Game!.Id);
        NavigationManager.Refresh(); // since this is nested in the home component refreshing will just refresh the component without the deleted game
    }
}
